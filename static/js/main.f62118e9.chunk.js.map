{"version":3,"sources":["firebase.js","utils.js","App.js","serviceWorker.js","index.js"],"names":["firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","storage","boot","firebase","initializeApp","firestore","fetchStates","a","collection","doc","get","snapshot","data","states","fetchCity","uf","cities","sendMail","subject","text","add","to","message","uploadFile","file","progress","ref","nameParts","name","split","fileRef","child","uuid","length","upload","put","on","bytesTransferred","totalBytes","getDownloadURL","calcEstimate","powerConsumption","correction","irradiance","idealPower","nModules","Math","trunc","realPower","toFixed","calcEconomy","monthlyFare","solutionPrice","anualAdjustment","period","accumulator","currentMonth","roi","calcEnviroment","power","theme","createMuiTheme","palette","primary","main","dark","light","secondary","useStyles","makeStyles","autocomplete","width","container","marginTop","spacing","button","borderRadius","dropzone","minHeight","resultTitle","warning","color","grey","fareFormat","value","num","Number","replace","floor","FareMaskInput","props","onChange","inputRef","other","getInputRef","onValueChange","values","floatValue","format","onClick","e","target","setSelectionRange","onKeyDown","onKeyUp","BillMaskInput","thousandSeparator","decimalSeparator","decimalScale","PhoneMaskInput","mask","onAccept","v","formatter","Intl","NumberFormat","style","currency","App","useState","state","setState","setStates","city","setCity","setCities","loadingStates","setLoadingStates","loadingCities","setLoadingCities","stateInput","setStateInput","cityInput","setCityInput","type","setType","consumption","setConsumption","setName","email","setEmail","phone","setPhone","result","setResult","enableFare","setEnableFare","fare","setFare","bill","setBill","showDropzone","setShowDropzone","selectedFile","setSelectedFile","uploading","setUploading","setProgress","classes","estimatedBill","price","accumulatedBill","co2","fileUrl","sendFile","notifyEmail","url","useEffect","ThemeProvider","Container","maxWidth","className","Grid","direction","item","Typography","variant","xs","Autocomplete","disabled","options","getOptionLabel","option","renderInput","params","TextField","inputProps","autoComplete","label","inputValue","onInputChange","justify","Button","clsx","outlined","contained","FormControl","component","RadioGroup","row","event","FormControlLabel","control","Radio","InputProps","inputComponent","startAdornment","InputAdornment","position","alignItems","Slider","verticalAlign","min","max","dropzoneText","files","filesLimit","acceptedFiles","root","isEmail","isLength","isEmpty","saveAndCalculate","Card","CardActionArea","CardContent","gutterBottom","LinearProgress","CardActions","href","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.f62118e9.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/analytics';\nimport 'firebase/firestore';\nimport 'firebase/storage';\nimport { v4 as uuid } from 'uuid';\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyD_KB1Ej5kaiklswvdw7cnH7y-mrNG3l8A\",\n    authDomain: \"vaesolar-simulador.firebaseapp.com\",\n    databaseURL: \"https://vaesolar-simulador.firebaseio.com\",\n    projectId: \"vaesolar-simulador\",\n    storageBucket: \"vaesolar-simulador.appspot.com\",\n    messagingSenderId: \"1031606633041\",\n    appId: \"1:1031606633041:web:1605146ea51f6927866e70\",\n    measurementId: \"G-1Y5YD7MM1X\"\n};\n\n/**\n * @type {firebase.firestore.Firestore}\n */\nvar db = null;\n/**\n * @type {firebase.storage.Storage}\n */\nvar storage = null\n\nexport function boot() {\n    if (db === null) {\n        firebase.initializeApp(firebaseConfig);\n        db = firebase.firestore();\n        storage = firebase.storage();\n    }\n}\n\nexport async function fetchStates() {\n    boot();\n    var snapshot = await db.collection('regions').doc('states').get();\n    return snapshot.data().states;\n}\n\nexport async function fetchCity(uf) {\n    boot();\n    var snapshot = await db.collection('regions').doc(uf).get();\n    var data = snapshot.data();\n    if (data) {\n        return data.cities;\n    } else {\n        return [];\n    }\n}\n\nexport async function sendMail(subject, text) {\n    boot();\n    await db.collection('mails').add({\n        to: ['ivandalcantara@gmail.com', 'contato@vaesolar.com.br'],\n        message: {\n            subject,\n            text\n        }\n    })\n}\n\nexport async function uploadFile(file, progress) {\n    boot();\n    let ref = storage.ref();\n    let nameParts = file.name.split('.');\n    let fileRef = ref.child(`images/${uuid()}.${nameParts[nameParts.length - 1]}`)\n    let upload = fileRef.put(file);\n    upload.on('state_changed', function (snapshot) {\n        progress((snapshot.bytesTransferred / snapshot.totalBytes) * 100);\n    });\n\n    let snapshot = await upload\n    return await snapshot.ref.getDownloadURL();\n}","export function calcEstimate(powerConsumption, correction, irradiance) {\n    let idealPower = (powerConsumption - correction) / (30 * 0.8 * irradiance);\n    let nModules = Math.trunc((idealPower / 325) * 1000) + 1;\n    let realPower = (nModules * 325 / 1000).toFixed(2);\n    let price;\n    if (realPower < 1) {\n        price = realPower * 6900;\n    } else if (realPower < 3) {\n        price = realPower * 5500;\n    } else if (realPower < 8) {\n        price = realPower * 4800;\n    } else if (realPower < 12) {\n        price = realPower * 4600;\n    } else if (realPower < 30) {\n        price = realPower * 4200;\n    } else if (realPower < 100) {\n        price = realPower * 3800;\n    } else {\n        price = realPower * 3600;\n    }\n    price = price.toFixed(2);\n\n    return [price, nModules, realPower];\n}\n\nexport function calcEconomy(monthlyFare, solutionPrice, anualAdjustment, period) {\n    let accumulator = 0;\n    let currentMonth = 0;\n    while (accumulator < solutionPrice && currentMonth <= period * 12) {\n        accumulator += monthlyFare;\n        if (currentMonth % 12 === 0) {\n            monthlyFare = monthlyFare * (1 + anualAdjustment / 100)\n        }\n        currentMonth++;\n    }\n    let roi = currentMonth;\n    while (currentMonth <= period * 12) {\n        accumulator += monthlyFare;\n        if (currentMonth % 12 === 0) {\n            monthlyFare = monthlyFare * (1 + anualAdjustment / 100)\n        }\n        currentMonth++;\n    }\n    return [roi, accumulator]\n}\n\nexport function calcEnviroment(power) {\n    return power * 0.1244\n}","import { Button, Card, CardActionArea, CardActions, CardContent, Container, createMuiTheme, FormControl, FormControlLabel, Grid, InputAdornment, LinearProgress, makeStyles, Radio, RadioGroup, Slider, TextField, ThemeProvider, Typography } from '@material-ui/core';\nimport { Autocomplete } from '@material-ui/lab';\nimport clsx from 'clsx';\nimport 'fontsource-roboto';\nimport { DropzoneArea } from 'material-ui-dropzone';\nimport React, { useEffect, useState } from 'react';\nimport { IMaskInput } from 'react-imask';\nimport NumberFormat from 'react-number-format';\nimport { isEmail, isEmpty, isLength } from 'validator';\nimport { fetchCity, fetchStates, sendMail, uploadFile } from './firebase';\nimport { calcEstimate, calcEconomy, calcEnviroment } from './utils';\nimport { grey } from '@material-ui/core/colors';\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: \"#133673\",\n            dark: \"#0d2550\",\n            light: \"#425e8f\"\n        },\n        secondary: {\n            main: \"#fbaf0e\",\n            dark: \"#af7a09\",\n            light: \"#fbbf3e\"\n        },\n    }\n});\n\nconst useStyles = makeStyles(theme => ({\n    autocomplete: {\n        width: '100%'\n    },\n    container: {\n        marginTop: theme.spacing(2)\n    },\n    button: {\n        borderRadius: '10px'\n    },\n    dropzone: {\n        minHeight: '150px'\n    },\n    resultTitle: {\n        marginTop: theme.spacing(2)\n    },\n    warning: {\n        color: grey[500],\n        marginTop: theme.spacing(1)\n    }\n}));\n\nfunction fareFormat(value) {\n    // console.log(value)\n    var num = Number(value);\n    if (num <= 200) {\n        return (num / 100).toFixed(2).replace('.', ',');\n    } else {\n        return fareFormat(Math.floor(num / 10))\n    }\n}\n\nfunction FareMaskInput(props) {\n    const { onChange, inputRef, ...other } = props;\n\n    return (\n        <NumberFormat\n            {...other}\n            getInputRef={inputRef}\n            onValueChange={(values) => {\n                onChange(values.floatValue);\n            }}\n            format={fareFormat}\n            onClick={e => e.target.setSelectionRange(e.target.value.length, e.target.value.length)}\n            onChange={e => e.target.setSelectionRange(e.target.value.length, e.target.value.length)}\n            onKeyDown={e => e.target.setSelectionRange(e.target.value.length, e.target.value.length)}\n            onKeyUp={e => e.target.setSelectionRange(e.target.value.length, e.target.value.length)}\n        />\n    )\n}\nfunction BillMaskInput(props) {\n    const { onChange, inputRef, ...other } = props;\n\n    return (\n        <NumberFormat\n            {...other}\n            getInputRef={inputRef}\n            onValueChange={(values) => {\n                onChange(values.floatValue);\n            }}\n            thousandSeparator={'.'}\n            decimalSeparator={','}\n            decimalScale={2}\n        />\n    )\n}\nfunction PhoneMaskInput(props) {\n    const { onChange, ...other } = props;\n\n    return (\n        <IMaskInput\n            {...other}\n            mask={[\n                {\n                    mask: \"(00) 0000-0000\"\n                },\n                {\n                    mask: \"(00) 00000-0000\"\n                },\n            ]}\n\n            onAccept={v => onChange(v)}\n        />\n    )\n}\n\nconst formatter = new Intl.NumberFormat('pr-BR', {\n    style: 'currency',\n    currency: \"BRL\"\n});\n\nfunction App() {\n    const [state, setState] = useState(null);\n    const [states, setStates] = useState([]);\n    const [city, setCity] = useState(null);\n    const [cities, setCities] = useState([]);\n    const [loadingStates, setLoadingStates] = useState(false);\n    const [loadingCities, setLoadingCities] = useState(false);\n    const [stateInput, setStateInput] = useState('');\n    const [cityInput, setCityInput] = useState('');\n    const [type, setType] = useState('');\n    const [consumption, setConsumption] = useState(100);\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [phone, setPhone] = useState('');\n    // const [result, setResult] = useState({ price: 100, nModules: 1, realPower: 100, accumulatedBill: 10000, co2: 100, roi: 27 });\n    const [result, setResult] = useState(null);\n    const [enableFare, setEnableFare] = useState(false);\n    const [fare, setFare] = useState(0);\n    const [bill, setBill] = useState('');\n    const [showDropzone, setShowDropzone] = useState(false);\n    const [selectedFile, setSelectedFile] = useState(null);\n    const [uploading, setUploading] = useState(false);\n    const [progress, setProgress] = useState(0);\n    const classes = useStyles();\n\n    useEffect(() => {\n        (async () => {\n            setLoadingStates(true);\n            let result = await fetchStates();\n            setStates(result);\n            setLoadingStates(false);\n        })();\n    }, []);\n\n    useEffect(() => {\n        if (state === null) {\n            return;\n        }\n        (async () => {\n            setCityInput('');\n            setLoadingCities(true);\n            let result = await fetchCity(state.uf);\n            setCities(result);\n            setLoadingCities(false);\n        })();\n    }, [state])\n\n    function validate() {\n        return isEmail(email) &&\n            isLength(phone, { min: 14, max: 15 }) &&\n            !isEmpty(name) &&\n            state !== null &&\n            city != null &&\n            !isEmpty(type) &&\n            (!enableFare || (fare > 0 && bill > 0))\n    }\n\n    function reset() {\n        setResult(null);\n        setSelectedFile(null)\n    }\n\n    async function saveAndCalculate() {\n        let correction = type == 'residential' ? 50 : 100;\n        let powerConsumption\n        if (enableFare) {\n            powerConsumption = bill / (fare / 100);\n        } else {\n            powerConsumption = consumption;\n        }\n        let estimatedBill = bill;\n        if (!enableFare) {\n            if (type == 'residential') {\n                estimatedBill = 0.94 * consumption;\n            } else if (type == 'commercial') {\n                estimatedBill = 0.84 * consumption;\n            } else {\n                estimatedBill = 0.5 * consumption;\n            }\n        }\n\n        let [price, nModules, realPower] = calcEstimate(powerConsumption, correction, city.irradiance);\n        let [roi, accumulatedBill] = calcEconomy(estimatedBill, Number(price), 6, 25);\n        let co2 = calcEnviroment(powerConsumption);\n\n        setResult({ price, nModules, realPower, roi, accumulatedBill, co2 });\n        let fileUrl = null;\n        if (selectedFile !== null) {\n            fileUrl = await sendFile();\n        }\n        notifyEmail(powerConsumption, fileUrl);\n    }\n\n    async function notifyEmail(powerConsumption, fileUrl = null) {\n        let subject = '[Simulador] Novo calculo'\n        let text;\n        if (fileUrl !== null) {\n            text = `\n                Nome: ${name}\n                Email: ${email}\n                Telefone: ${phone}\n\n                Calculo\n                Local: ${city.name} ${state.name}\n                Tipo de instalação: ${type == 'residential' ? 'residencia' : type == 'commercial' ? 'comércio' : 'indústria'}\n                Consumo mensal: ${powerConsumption.toFixed(2)} kWh\n                Imagem enviada: ${fileUrl}\n            `\n        } else {\n            text = `\n                Nome: ${name}\n                Email: ${email}\n                Telefone: ${phone}\n\n                Calculo\n                Local: ${city.name} ${state.name}\n                Tipo de instalação: ${type == 'residential' ? 'residencia' : type == 'commercial' ? 'comércio' : 'indústria'}\n                Consumo mensal: ${powerConsumption.toFixed(2)} kWh\n                Imagem enviada: ${fileUrl}\n            `\n        }\n\n        sendMail(subject, text);\n    }\n\n    async function sendFile() {\n        setUploading(true);\n        setProgress(0);\n        let url = await uploadFile(selectedFile, progress => setProgress(progress));\n        setUploading(false);\n        return url;\n    }\n\n    function handleFileSelect(files) {\n        if (files.length !== 1) {\n            return\n        }\n        setShowDropzone(false)\n        setSelectedFile(files[0]);\n    }\n\n    if (result === null) {\n        return (\n            <ThemeProvider theme={theme}>\n                <Container maxWidth=\"md\" className={classes.container}>\n                    <Grid container spacing={2} direction=\"column\">\n                        <Grid item>\n                            <Typography variant=\"h4\">Simulador de Investimento</Typography>\n                        </Grid>\n                        <Grid item>\n                            <Typography variant=\"h6\">Qual o local de instalação?</Typography>\n                        </Grid>\n                        <Grid item container spacing={2}>\n                            <Grid item xs={6}>\n                                <Autocomplete\n                                    disabled={loadingStates}\n                                    options={states}\n                                    getOptionLabel={option => option.uf}\n                                    className={classes.autocomplete}\n                                    renderInput={params => <TextField\n                                        {...params}\n                                        inputProps={{\n                                            ...params.inputProps,\n                                            autoComplete: 'new-password',\n                                        }}\n                                        label=\"Estado\"\n                                        variant=\"standard\"\n                                    />}\n                                    value={state}\n                                    onChange={(e, v) => setState(v)}\n                                    inputValue={stateInput}\n                                    onInputChange={(e, v) => setStateInput(v)}\n                                />\n                            </Grid>\n                            <Grid item xs={6}>\n                                <Autocomplete\n                                    disabled={loadingCities || state == null}\n                                    options={cities}\n                                    getOptionLabel={option => option.name}\n                                    className={classes.autocomplete}\n                                    renderInput={params => <TextField\n                                        {...params}\n                                        label={loadingCities ? 'Carregando...' : 'Cidades'}\n                                        variant=\"standard\"\n                                        inputProps={{\n                                            ...params.inputProps,\n                                            autoComplete: 'new-password',\n                                        }}\n                                    />}\n                                    value={city}\n                                    onChange={(e, v) => setCity(v)}\n                                    inputValue={cityInput}\n                                    onInputChange={(e, v) => setCityInput(v)}\n                                />\n                            </Grid>\n                        </Grid>\n                        <Grid item >\n                            <Typography variant=\"h6\">Qual o tipo de instalação?</Typography>\n                        </Grid>\n                        <Grid item container justify=\"space-evenly\">\n                            <Grid item>\n                                <Button\n                                    variant={clsx({ outlined: type != 'residential', contained: type == 'residential' })}\n                                    color=\"primary\"\n                                    className={classes.button}\n                                    onClick={() => setType('residential')}\n                                >\n                                    Residencia\n                        </Button>\n                            </Grid>\n                            <Grid item>\n                                <Button\n                                    variant={clsx({ outlined: type != 'commercial', contained: type == 'commercial' })}\n                                    color=\"primary\"\n                                    className={classes.button}\n                                    onClick={() => setType('commercial')}\n                                >\n                                    Empresa\n                        </Button>\n                            </Grid>\n                            <Grid item>\n                                <Button\n                                    variant={clsx({ outlined: type != 'industrial', contained: type == 'industrial' })}\n                                    color=\"primary\"\n                                    className={classes.button}\n                                    onClick={() => setType('industrial')}\n                                >\n                                    Industria\n                        </Button>\n                            </Grid>\n                        </Grid>\n                        <Grid item >\n                            <Typography variant=\"h6\">Voce sabe o valor da sua tarifa?</Typography>\n                        </Grid>\n                        <Grid item container justify=\"center\" spacing={2}>\n                            <Grid item>\n                                <FormControl component=\"fieldset\">\n                                    <RadioGroup row value={enableFare} onChange={(event) => setEnableFare(event.target.value == \"true\")}>\n                                        <FormControlLabel value={true} control={<Radio color=\"primary\" />} label=\"Sim\" />\n                                        <FormControlLabel value={false} control={<Radio color=\"primary\" />} label=\"Não\" />\n                                    </RadioGroup>\n                                </FormControl>\n                            </Grid>\n                        </Grid>\n                        {\n                            enableFare ?\n                                <Grid item container spacing={2}>\n                                    <Grid item xs={4}>\n                                        <TextField InputProps={{ inputComponent: FareMaskInput, startAdornment: <InputAdornment position=\"start\">R$</InputAdornment> }} type=\"text\" value={fare} onChange={(v) => setFare(v)} label=\"Tarifa\" />\n                                    </Grid>\n                                    <Grid item xs={8}>\n                                        <TextField style={{ width: '100%' }} InputProps={{ inputComponent: BillMaskInput, startAdornment: <InputAdornment position=\"start\">R$</InputAdornment> }} type=\"text\" value={bill} onChange={(v) => setBill(v)} label=\"Valor da conta\" />\n                                    </Grid>\n                                </Grid>\n                                :\n                                <>\n                                    <Grid item >\n                                        <Typography variant=\"h6\">Qual seu consumo mensal em KWh?</Typography>\n                                    </Grid>\n                                    <Grid item container alignItems=\"center\" spacing={2}>\n                                        <Grid item xs={8}>\n                                            <Slider style={{ verticalAlign: \"center\" }} min={0} max={1000} value={consumption} onChange={(e, v) => setConsumption(v)} />\n                                        </Grid>\n                                        <Grid item xs={4}>\n                                            <TextField type=\"number\" value={consumption} onChange={(e) => setConsumption(e.target.value)} label=\"kWh\" />\n                                        </Grid>\n                                    </Grid>\n                                </>\n                        }\n\n                        <Grid item >\n                            <Typography variant=\"h6\">Qual o seu contato?</Typography>\n                        </Grid>\n                        <Grid item container justify=\"center\" spacing={2}>\n                            <Grid item xs={4} >\n                                <TextField type=\"text\" value={name} onChange={(e) => setName(e.target.value)} label=\"Nome\" />\n                            </Grid>\n                            <Grid item xs={4} >\n                                <TextField type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} label=\"Email\" />\n                            </Grid>\n                            <Grid item xs={4} >\n                                <TextField InputProps={{ inputComponent: PhoneMaskInput }} type=\"text\" value={phone} onChange={(v) => setPhone(v)} label=\"Telefone\" />\n                            </Grid>\n                        </Grid>\n                        <Grid item container spacing={2}>\n                            {\n                                showDropzone ?\n                                    <Grid item xs={12}>\n                                        <DropzoneArea\n                                            dropzoneText=\"Arraste a imagem aqui ou clique\"\n                                            onChange={handleFileSelect}\n                                            filesLimit={1}\n                                            acceptedFiles={['image/*']}\n                                            classes={{ root: classes.dropzone }}\n                                        />\n                                    </Grid> :\n                                    <>\n                                        <Grid item xs={8}>\n                                            <Typography variant=\"body1\">\n                                                {\n                                                    selectedFile === null ?\n                                                        'Para receber um orçamento personalizado, anexe aqui uma foto da sua conta de energia.' :\n                                                        `Arquivo selecionado: ${selectedFile.name}`\n                                                }\n                                            </Typography>\n                                        </Grid>\n                                        <Grid item xs={4} container justify=\"flex-end\" alignItems=\"center\">\n                                            <Button variant=\"outlined\" color=\"primary\" className={classes.button} onClick={() => setShowDropzone(true)}>Selecionar</Button>\n                                        </Grid>\n                                    </>\n                            }\n                        </Grid>\n                        <Grid item >\n                            <Button className={classes.button} disabled={!validate()} onClick={() => saveAndCalculate()} color=\"primary\" variant=\"contained\" style={{ width: '100%' }}>Calcular</Button>\n                        </Grid>\n                    </Grid>\n                </Container>\n            </ThemeProvider>\n        );\n    } else {\n        return (\n            <ThemeProvider theme={theme}>\n                <Container maxWidth=\"md\" className={classes.container}>\n                    <Card>\n                        <CardActionArea>\n                            <CardContent>\n                                <Typography gutterBottom variant=\"h5\" component=\"h2\">Estimativas</Typography>\n                                <Typography variant=\"body1\" component=\"p\">\n                                    Valor da solução VAE Solar: <strong>{formatter.format(result.price)}</strong>\n                                    <br />\n                                    Potência do sistema: <strong>{result.realPower} kWp</strong>\n                                </Typography>\n                                <Typography gutterBottom variant=\"h5\" component=\"h2\" className={classes.resultTitle}>Economia</Typography>\n                                <Typography variant=\"body1\" component=\"p\">\n                                    Retorno do investimento: <strong>{(result.roi / 12).toFixed(1)} anos</strong>\n                                    <br />\n                                    Economia em 25 anos: <strong>{formatter.format(result.accumulatedBill - result.price)}</strong>\n                                    <br />\n                                    Quantidade de CO<sub>2</sub> evitada: <strong>{(result.co2 * 12).toFixed(2)} kg/ano</strong>\n                                </Typography>\n                                <Typography variant=\"caption\" className={classes.warning} component=\"p\">ATENÇÃO: Estes resultados são apenas uma estimativa. Receba um orçamento personalizado entrando em contato pelo botão abaixo</Typography>\n                                {\n                                    selectedFile !== null ?\n                                        (\n                                            <>\n                                                <br />\n                                                {\n                                                    uploading ?\n                                                        <>\n                                                            <Typography variant=\"body1\" component=\"p\">Enviando o arquivo {selectedFile.name}</Typography>\n                                                            <LinearProgress value={progress} variant=\"determinate\" />\n                                                        </>\n                                                        :\n                                                        <Typography variant=\"body1\" component=\"p\">Arquivo {selectedFile.name} enviado com sucesso!</Typography>\n                                                }\n                                            </>\n\n                                        )\n                                        :\n                                        null\n                                }\n\n                            </CardContent>\n                        </CardActionArea>\n                        <CardActions>\n                            <Button color=\"primary\" onClick={reset}>Novo cálculo</Button>\n                            <Button color=\"primary\" href=\"https://www.vaesolar.com.br/contato\">Entrar em contato</Button>\n                        </CardActions>\n                    </Card>\n                </Container>\n            </ThemeProvider>\n        )\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}